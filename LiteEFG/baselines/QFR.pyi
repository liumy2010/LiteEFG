import LiteEFG as LiteEFG
from __future__ import annotations
__all__ = ['LiteEFG', 'graph']
class graph(LiteEFG._LiteEFG.Graph):
    def __init__(self, eta = 0.001, tau = 0.001, gamma = 0.001, regularizer: typing.Literal['Euclidean', 'Entropy'] = 'Entropy', feedback = 'Q', weighted = False, bidilated = True):
        ...
    def _full_information(self):
        ...
    def _outcome_sampling(self):
        ...
    def _update(self, upd_u, ref_u, gradient):
        ...
    def current_strategy(self) -> LiteEFG._LiteEFG.GraphNode:
        ...
    def update_graph(self, env: LiteEFG._LiteEFG.Environment) -> None:
        ...
